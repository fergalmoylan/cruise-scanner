name: Scrape Cruise Prices

on:
  workflow_dispatch:
    inputs:
      max_cruises:
        description: 'Maximum cruises (default: 10)'
        required: false
        default: '10'
      max_sailings:
        description: 'Maximum sailings per cruise (default: 5)'
        required: false
        default: '5'
      run_analysis:
        description: 'Run analysis after scraping'
        type: boolean
        default: false

  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC

jobs:
  scrape:
    # Use Ubuntu 22.04 instead of latest (24.04) for better compatibility
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        # Install Python packages
        pip install -r requirements.txt

        # Install webkit using Python's playwright (not npx)
        python -m playwright install webkit
        python -m playwright install-deps webkit

    - name: Run scraper with configuration
      env:
        GITHUB_ACTIONS: true
        PYTHONUNBUFFERED: "1"
      run: |
        # For manual runs, use inputs; for scheduled runs, use defaults
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          MAX_CRUISES="${{ github.event.inputs.max_cruises }}"
          MAX_SAILINGS="${{ github.event.inputs.max_sailings }}"
          ANALYZE="${{ github.event.inputs.run_analysis }}"
        else
          MAX_CRUISES="10"
          MAX_SAILINGS="5"
          ANALYZE="false"
        fi

        # Build command
        CMD="python -u src/main.py --scrape"
        [ -n "$MAX_CRUISES" ] && CMD="$CMD --max-cruises $MAX_CRUISES"
        [ -n "$MAX_SAILINGS" ] && CMD="$CMD --max-sailings $MAX_SAILINGS"
        [ "$ANALYZE" == "true" ] && CMD="$CMD --analyze"

        echo "Running: $CMD"
        $CMD

    - name: Commit changes
      run: |
        git config user.name "GitHub Action"
        git config user.email "action@github.com"

        # Force add data files (override .gitignore)
        git add -f data/processed/*.json
        git add -f data/cruise_prices.csv

        # Commit if there are changes
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update cruise data - $(date +'%Y-%m-%d')"
          git push
        fi
